name: Go

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'     
        required: true
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    
    - name: Build Linux 32
      run: go build -v -o oec-32-linux
      working-directory: main
      if: success() 
      env:
        GOOS: linux 
        GOARCH: 386

    - name: Build Linux 64
      run: go build -v -o oec-64-linux
      working-directory: main
      if: success() 
      env:
        GOOS: linux 
        GOARCH: amd64
  
    - name: Build Win 32
      run: go build -v -o oec-32-win.exe
      working-directory: main
      if: success() 
      env:
        GOOS: windows 
        GOARCH: 386
        
    - name: Build Win 64
      run: go build -v -o oec-64-win.exe
      working-directory: main
      if: success() 
      env:
        GOOS: windows 
        GOARCH: amd64

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version }}
        release_name: Release ${{ github.event.inputs.version }}
        draft: true

    - name: Upload Linux 32 bit Release 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: main/oec-32-linux
        asset_name: oec-32-linux
        asset_content_type: application/octet-stream

    - name: Upload Linux 64 bit Release 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: main/oec-64-linux
        asset_name: oec-64-linux
        asset_content_type: application/octet-stream

    - name: Upload Win 32 bit Release 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: main/oec-32-win.exe
        asset_name: oec-32-win.exe
        asset_content_type: application/octet-stream

    - name: Upload Win 64 bit Release  
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: main/oec-64-win.exe
        asset_name: oec-64-win.exe
        asset_content_type: application/octet-stream
        
    - name: Upload Artifacts 
      uses: actions/upload-artifact@v2
      with:
        name: Release Artifacts
        path: |
          main/**
          !main/main.go
